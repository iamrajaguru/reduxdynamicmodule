{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n/** Ref counts given object */\n\nfunction getObjectRefCounter(equals, retained) {\n  if (!equals) {\n    equals = function (a, b) {\n      return a === b;\n    };\n  }\n\n  if (!retained) {\n    retained = function () {\n      return false;\n    };\n  }\n\n  var objects = [];\n  var counts = [];\n  return {\n    /**\n     * Gets ref count of given T\n     */\n    getCount: function (obj) {\n      if (obj === undefined || obj === null) {\n        return 0;\n      }\n\n      var index = objects.findIndex(function (o) {\n        return o && equals(o, obj);\n      });\n\n      if (index === -1) {\n        return 0;\n      }\n\n      return counts[index];\n    },\n\n    /**\n     * Add given T or increments ref count\n     */\n    add: function (obj) {\n      if (obj === undefined || obj === null) {\n        return;\n      }\n\n      var index = objects.findIndex(function (o) {\n        return o && equals(o, obj);\n      });\n      var count = 1;\n\n      if (index === -1) {\n        index = objects.length;\n        objects.push(obj);\n      } else {\n        count = counts[index] + 1;\n      } // If item is retained then keep it for inifinty\n\n\n      if (retained(obj)) {\n        count = Infinity;\n      }\n\n      counts[index] = count;\n    },\n\n    /**\n     * Decreases ref count for given T, if refcount reaches to zero removes the T and returns true\n     */\n    remove: function (obj) {\n      if (retained(obj)) {\n        return false;\n      }\n\n      var index = objects.findIndex(function (o) {\n        return o && equals(o, obj);\n      });\n\n      if (index === -1) {\n        return false;\n      }\n\n      if (counts[index] === 1) {\n        delete objects[index];\n        delete counts[index];\n        return true;\n      }\n\n      counts[index] = counts[index] - 1;\n      return false;\n    }\n  };\n}\n\nexports.getObjectRefCounter = getObjectRefCounter;\n/**\n * Ref counts strings\n */\n\nfunction getStringRefCounter() {\n  var values = {};\n  return {\n    /**\n     * Returns current ref count for the key\n     */\n    getCount: function (key) {\n      if (key === undefined || key === null) {\n        return 0;\n      }\n\n      return values[key] || 0;\n    },\n\n    /**\n     * Adds given key for ref counting or increments ref count\n     */\n    add: function (key) {\n      if (key === undefined || key === null) {\n        return;\n      }\n\n      if (!values[key]) {\n        values[key] = 1;\n      } else {\n        values[key]++;\n      }\n    },\n\n    /**\n     * Decreases ref count for the given key, if the ref count reaches 0 removes the key and returns true\n     */\n    remove: function (key) {\n      if (key === undefined || key === null) {\n        return false;\n      }\n\n      if (!values[key]) {\n        return false;\n      }\n\n      if (values[key] === 1) {\n        delete values[key];\n        return true;\n      }\n\n      values[key]--;\n      return false;\n    }\n  };\n}\n\nexports.getStringRefCounter = getStringRefCounter;","map":{"version":3,"sources":["/home/rajaguru/Projects/KowthamDynamicModule/redux-dynamic-module/node_modules/redux-dynamic-modules-core/lib/Utils/RefCounter.js"],"names":["exports","__esModule","getObjectRefCounter","equals","retained","a","b","objects","counts","getCount","obj","undefined","index","findIndex","o","add","count","length","push","Infinity","remove","getStringRefCounter","values","key"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\n/** Ref counts given object */\nfunction getObjectRefCounter(equals, retained) {\n    if (!equals) {\n        equals = function (a, b) { return a === b; };\n    }\n    if (!retained) {\n        retained = function () { return false; };\n    }\n    var objects = [];\n    var counts = [];\n    return {\n        /**\n         * Gets ref count of given T\n         */\n        getCount: function (obj) {\n            if (obj === undefined || obj === null) {\n                return 0;\n            }\n            var index = objects.findIndex(function (o) { return o && equals(o, obj); });\n            if (index === -1) {\n                return 0;\n            }\n            return counts[index];\n        },\n        /**\n         * Add given T or increments ref count\n         */\n        add: function (obj) {\n            if (obj === undefined || obj === null) {\n                return;\n            }\n            var index = objects.findIndex(function (o) { return o && equals(o, obj); });\n            var count = 1;\n            if (index === -1) {\n                index = objects.length;\n                objects.push(obj);\n            }\n            else {\n                count = counts[index] + 1;\n            }\n            // If item is retained then keep it for inifinty\n            if (retained(obj)) {\n                count = Infinity;\n            }\n            counts[index] = count;\n        },\n        /**\n         * Decreases ref count for given T, if refcount reaches to zero removes the T and returns true\n         */\n        remove: function (obj) {\n            if (retained(obj)) {\n                return false;\n            }\n            var index = objects.findIndex(function (o) { return o && equals(o, obj); });\n            if (index === -1) {\n                return false;\n            }\n            if (counts[index] === 1) {\n                delete objects[index];\n                delete counts[index];\n                return true;\n            }\n            counts[index] = counts[index] - 1;\n            return false;\n        }\n    };\n}\nexports.getObjectRefCounter = getObjectRefCounter;\n/**\n * Ref counts strings\n */\nfunction getStringRefCounter() {\n    var values = {};\n    return {\n        /**\n         * Returns current ref count for the key\n         */\n        getCount: function (key) {\n            if (key === undefined || key === null) {\n                return 0;\n            }\n            return values[key] || 0;\n        },\n        /**\n         * Adds given key for ref counting or increments ref count\n         */\n        add: function (key) {\n            if (key === undefined || key === null) {\n                return;\n            }\n            if (!values[key]) {\n                values[key] = 1;\n            }\n            else {\n                values[key]++;\n            }\n        },\n        /**\n         * Decreases ref count for the given key, if the ref count reaches 0 removes the key and returns true\n         */\n        remove: function (key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            if (!values[key]) {\n                return false;\n            }\n            if (values[key] === 1) {\n                delete values[key];\n                return true;\n            }\n            values[key]--;\n            return false;\n        }\n    };\n}\nexports.getStringRefCounter = getStringRefCounter;\n"]},"metadata":{},"sourceType":"script"}