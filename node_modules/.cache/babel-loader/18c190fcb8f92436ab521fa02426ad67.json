{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexports.__esModule = true;\n\nvar redux_1 = require(\"redux\");\n\nvar RefCounter_1 = require(\"../Utils/RefCounter\");\n/**\n * Adds reference counting to reducer manager and adds/remove keys only when ref count is zero\n */\n\n\nfunction getRefCountedReducerManager(manager) {\n  var reducerKeyRefCounter = RefCounter_1.getStringRefCounter();\n\n  for (var key in manager.getReducerMap()) {\n    reducerKeyRefCounter.add(key);\n  }\n\n  return {\n    reduce: manager.reduce,\n    getReducerMap: manager.getReducerMap,\n    add: function (key, reducer) {\n      if (reducerKeyRefCounter.getCount(key) === 0) {\n        manager.add(key, reducer);\n      }\n\n      reducerKeyRefCounter.add(key);\n    },\n    remove: function (key) {\n      reducerKeyRefCounter.remove(key);\n\n      if (reducerKeyRefCounter.getCount(key) === 0) {\n        manager.remove(key);\n      }\n    }\n  };\n}\n\nexports.getRefCountedReducerManager = getRefCountedReducerManager;\n/**\n * Create a combined reducer as in the fashion of Redux's combineReducers() function,\n * but allows for the dynamic registration of additional reducers\n * @param initialReducers The initial set of reducers\n * @returns An object with three functions: the reducer, an addReducer function, and a removeReducer function\n */\n\nfunction getReducerManager(initialReducers, reducerCombiner) {\n  if (reducerCombiner === void 0) {\n    reducerCombiner = redux_1.combineReducers;\n  }\n\n  var combinedReducer = reducerCombiner(initialReducers);\n\n  var reducers = __assign({}, initialReducers);\n\n  var keysToRemove = [];\n\n  var reduce = function (state, action) {\n    if (keysToRemove.length > 0) {\n      state = __assign({}, state);\n\n      for (var _i = 0, keysToRemove_1 = keysToRemove; _i < keysToRemove_1.length; _i++) {\n        var key = keysToRemove_1[_i];\n        delete state[key];\n      }\n\n      keysToRemove = [];\n    }\n\n    if (state === undefined) {\n      state = {};\n    }\n\n    return combinedReducer(state, action);\n  };\n\n  return {\n    getReducerMap: function () {\n      return reducers;\n    },\n    reduce: reduce,\n    add: function (key, reducer) {\n      if (!key || reducers[key]) {\n        return;\n      }\n\n      reducers[key] = reducer;\n      combinedReducer = getCombinedReducer(reducers, reducerCombiner);\n    },\n    remove: function (key) {\n      if (!key || !reducers[key]) {\n        return;\n      }\n\n      delete reducers[key];\n      keysToRemove.push(key);\n      combinedReducer = getCombinedReducer(reducers, reducerCombiner);\n    }\n  };\n}\n\nexports.getReducerManager = getReducerManager;\n\nfunction getCombinedReducer(reducerMap, reducerCombiner) {\n  if (reducerCombiner === void 0) {\n    reducerCombiner = redux_1.combineReducers;\n  }\n\n  if (!reducerMap || Object.keys(reducerMap).length === 0) {\n    return function (state, action) {\n      return state || null;\n    };\n  }\n\n  return reducerCombiner(reducerMap);\n}","map":{"version":3,"sources":["/home/rajaguru/Projects/KowthamDynamicModule/redux-dynamic-module/node_modules/redux-dynamic-modules-core/lib/Managers/ReducerManager.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","exports","__esModule","redux_1","require","RefCounter_1","getRefCountedReducerManager","manager","reducerKeyRefCounter","getStringRefCounter","key","getReducerMap","add","reduce","reducer","getCount","remove","getReducerManager","initialReducers","reducerCombiner","combineReducers","combinedReducer","reducers","keysToRemove","state","action","_i","keysToRemove_1","undefined","getCombinedReducer","push","reducerMap","keys"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexports.__esModule = true;\nvar redux_1 = require(\"redux\");\nvar RefCounter_1 = require(\"../Utils/RefCounter\");\n/**\n * Adds reference counting to reducer manager and adds/remove keys only when ref count is zero\n */\nfunction getRefCountedReducerManager(manager) {\n    var reducerKeyRefCounter = RefCounter_1.getStringRefCounter();\n    for (var key in manager.getReducerMap()) {\n        reducerKeyRefCounter.add(key);\n    }\n    return {\n        reduce: manager.reduce,\n        getReducerMap: manager.getReducerMap,\n        add: function (key, reducer) {\n            if (reducerKeyRefCounter.getCount(key) === 0) {\n                manager.add(key, reducer);\n            }\n            reducerKeyRefCounter.add(key);\n        },\n        remove: function (key) {\n            reducerKeyRefCounter.remove(key);\n            if (reducerKeyRefCounter.getCount(key) === 0) {\n                manager.remove(key);\n            }\n        }\n    };\n}\nexports.getRefCountedReducerManager = getRefCountedReducerManager;\n/**\n * Create a combined reducer as in the fashion of Redux's combineReducers() function,\n * but allows for the dynamic registration of additional reducers\n * @param initialReducers The initial set of reducers\n * @returns An object with three functions: the reducer, an addReducer function, and a removeReducer function\n */\nfunction getReducerManager(initialReducers, reducerCombiner) {\n    if (reducerCombiner === void 0) { reducerCombiner = redux_1.combineReducers; }\n    var combinedReducer = reducerCombiner(initialReducers);\n    var reducers = __assign({}, initialReducers);\n    var keysToRemove = [];\n    var reduce = function (state, action) {\n        if (keysToRemove.length > 0) {\n            state = __assign({}, state);\n            for (var _i = 0, keysToRemove_1 = keysToRemove; _i < keysToRemove_1.length; _i++) {\n                var key = keysToRemove_1[_i];\n                delete state[key];\n            }\n            keysToRemove = [];\n        }\n        if (state === undefined) {\n            state = {};\n        }\n        return combinedReducer(state, action);\n    };\n    return {\n        getReducerMap: function () { return reducers; },\n        reduce: reduce,\n        add: function (key, reducer) {\n            if (!key || reducers[key]) {\n                return;\n            }\n            reducers[key] = reducer;\n            combinedReducer = getCombinedReducer(reducers, reducerCombiner);\n        },\n        remove: function (key) {\n            if (!key || !reducers[key]) {\n                return;\n            }\n            delete reducers[key];\n            keysToRemove.push(key);\n            combinedReducer = getCombinedReducer(reducers, reducerCombiner);\n        }\n    };\n}\nexports.getReducerManager = getReducerManager;\nfunction getCombinedReducer(reducerMap, reducerCombiner) {\n    if (reducerCombiner === void 0) { reducerCombiner = redux_1.combineReducers; }\n    if (!reducerMap || Object.keys(reducerMap).length === 0) {\n        return function (state, action) { return state || null; };\n    }\n    return reducerCombiner(reducerMap);\n}\n"]},"metadata":{},"sourceType":"script"}