{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n/**\n * We will use it where we can not use the default Map as the Map class do not allow custom compare function\n * @param equals Optional, a comparer to use\n */\n\nfunction getMap(equals) {\n  var keys = [];\n  var values = {};\n  return {\n    /**\n     * Current set of keys\n     */\n    keys: keys,\n\n    /**\n     * Gets value for given key\n     */\n    get: function (key) {\n      if (!key) {\n        return undefined;\n      }\n\n      var index = keys.findIndex(function (k) {\n        return k && equals(k, key);\n      });\n\n      if (index === -1) {\n        return undefined;\n      }\n\n      return values[index];\n    },\n\n    /**\n     * Adds the given key and value\n     */\n    add: function (key, value) {\n      if (!key) {\n        return;\n      }\n\n      var index = keys.findIndex(function (k) {\n        return k && equals(k, key);\n      });\n\n      if (index === -1) {\n        keys.push(key);\n        values[keys.length - 1] = value;\n      }\n    },\n\n    /**\n     * Removes the given key and returns the value object if key was found\n     */\n    remove: function (key) {\n      if (!key) {\n        return undefined;\n      }\n\n      var index = keys.findIndex(function (k) {\n        return k && equals(k, key);\n      });\n\n      if (index === -1) {\n        return undefined;\n      }\n\n      delete keys[index];\n      var value = values[index];\n      delete values[index];\n      return value;\n    }\n  };\n}\n\nexports.getMap = getMap;","map":{"version":3,"sources":["/home/rajaguru/Projects/KowthamDynamicModule/redux-dynamic-module/node_modules/redux-dynamic-modules-core/lib/Utils/ComparableMap.js"],"names":["exports","__esModule","getMap","equals","keys","values","get","key","undefined","index","findIndex","k","add","value","push","length","remove"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACA;;;;;AAIA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,SAAO;AACH;;;AAGAD,IAAAA,IAAI,EAAEA,IAJH;;AAKH;;;AAGAE,IAAAA,GAAG,EAAE,UAAUC,GAAV,EAAe;AAChB,UAAI,CAACA,GAAL,EAAU;AACN,eAAOC,SAAP;AACH;;AACD,UAAIC,KAAK,GAAGL,IAAI,CAACM,SAAL,CAAe,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,IAAIR,MAAM,CAACQ,CAAD,EAAIJ,GAAJ,CAAlB;AAA6B,OAA3D,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,eAAOD,SAAP;AACH;;AACD,aAAOH,MAAM,CAACI,KAAD,CAAb;AACH,KAjBE;;AAkBH;;;AAGAG,IAAAA,GAAG,EAAE,UAAUL,GAAV,EAAeM,KAAf,EAAsB;AACvB,UAAI,CAACN,GAAL,EAAU;AACN;AACH;;AACD,UAAIE,KAAK,GAAGL,IAAI,CAACM,SAAL,CAAe,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,IAAIR,MAAM,CAACQ,CAAD,EAAIJ,GAAJ,CAAlB;AAA6B,OAA3D,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdL,QAAAA,IAAI,CAACU,IAAL,CAAUP,GAAV;AACAF,QAAAA,MAAM,CAACD,IAAI,CAACW,MAAL,GAAc,CAAf,CAAN,GAA0BF,KAA1B;AACH;AACJ,KA9BE;;AA+BH;;;AAGAG,IAAAA,MAAM,EAAE,UAAUT,GAAV,EAAe;AACnB,UAAI,CAACA,GAAL,EAAU;AACN,eAAOC,SAAP;AACH;;AACD,UAAIC,KAAK,GAAGL,IAAI,CAACM,SAAL,CAAe,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,IAAIR,MAAM,CAACQ,CAAD,EAAIJ,GAAJ,CAAlB;AAA6B,OAA3D,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,eAAOD,SAAP;AACH;;AACD,aAAOJ,IAAI,CAACK,KAAD,CAAX;AACA,UAAII,KAAK,GAAGR,MAAM,CAACI,KAAD,CAAlB;AACA,aAAOJ,MAAM,CAACI,KAAD,CAAb;AACA,aAAOI,KAAP;AACH;AA9CE,GAAP;AAgDH;;AACDb,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nexports.__esModule = true;\n/**\n * We will use it where we can not use the default Map as the Map class do not allow custom compare function\n * @param equals Optional, a comparer to use\n */\nfunction getMap(equals) {\n    var keys = [];\n    var values = {};\n    return {\n        /**\n         * Current set of keys\n         */\n        keys: keys,\n        /**\n         * Gets value for given key\n         */\n        get: function (key) {\n            if (!key) {\n                return undefined;\n            }\n            var index = keys.findIndex(function (k) { return k && equals(k, key); });\n            if (index === -1) {\n                return undefined;\n            }\n            return values[index];\n        },\n        /**\n         * Adds the given key and value\n         */\n        add: function (key, value) {\n            if (!key) {\n                return;\n            }\n            var index = keys.findIndex(function (k) { return k && equals(k, key); });\n            if (index === -1) {\n                keys.push(key);\n                values[keys.length - 1] = value;\n            }\n        },\n        /**\n         * Removes the given key and returns the value object if key was found\n         */\n        remove: function (key) {\n            if (!key) {\n                return undefined;\n            }\n            var index = keys.findIndex(function (k) { return k && equals(k, key); });\n            if (index === -1) {\n                return undefined;\n            }\n            delete keys[index];\n            var value = values[index];\n            delete values[index];\n            return value;\n        }\n    };\n}\nexports.getMap = getMap;\n"]},"metadata":{},"sourceType":"script"}